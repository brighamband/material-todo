{"version":3,"sources":["TodoItem.js","TodoList.js","App.js","index.js"],"names":["TodoItem","props","className","item","title","showCompleted","Button","variant","color","size","onClick","markedItem","addToCompleted","removeFromNotCompleted","TodoList","itemToAdd","setCompleted","completed","itemToRemove","notDone","notCompleted","filter","id","setNotCompleted","todos","map","key","App","useState","setShowCompleted","useEffect","axios","get","then","response","console","log","data","done","catch","error","ButtonGroup","value","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"mRA0BeA,EAvBE,SAACC,GAMhB,OACE,4BACE,0BAAMC,UAAU,cAAcD,EAAME,KAAKC,QACvCH,EAAMI,eACN,kBAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLC,QAAS,kBAbKC,EAacV,EAAME,KAZxCF,EAAMW,eAAeD,QACrBV,EAAMY,uBAAuBF,GAFV,IAACA,IAShB,mBCmBOG,EA5BE,SAACb,GAChB,IAAMW,EAAiB,SAACG,GACtBd,EAAMe,aAAN,sBAAuBf,EAAMgB,WAA7B,CAAwCF,MAGpCF,EAAyB,SAACK,GAC9B,IAAMC,EAAUlB,EAAMmB,aAAaC,QACjC,SAAClB,GAAD,OAAUA,EAAKmB,KAAOJ,EAAaI,MAErCrB,EAAMsB,gBAAgBJ,IAGxB,OACE,oCACGlB,EAAMuB,MAAMC,KAAI,SAACtB,GAAD,OACf,wBAAIuB,IAAKvB,EAAKmB,IACZ,kBAAC,EAAD,CACEnB,KAAMA,EACNE,cAAeJ,EAAMI,cACrBQ,uBAAwBA,EACxBD,eAAgBA,UCwCbe,EAxDH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTX,EADS,KACED,EADF,OAEwBY,mBAAS,IAFjC,mBAETR,EAFS,KAEKG,EAFL,OAG0BK,oBAAS,GAHnC,mBAGTvB,EAHS,KAGMwB,EAHN,KA0BhB,OArBAC,qBAAU,WACRC,IACGC,IAAI,+CACJC,MAAK,SAACC,GACLC,QAAQC,IAAI,YAAaF,EAASG,MAClC,IAAMC,EAAOJ,EAASG,KAAKhB,QACzB,SAAClB,GAAD,OAA6B,IAAnBA,EAAKc,WAAsBd,EAAKmB,GAAK,MAEjDN,EAAasB,GACbH,QAAQC,IAAI,OAAQE,GACpB,IAAMnB,EAAUe,EAASG,KAAKhB,QAC5B,SAAClB,GAAD,OAA6B,IAAnBA,EAAKc,WAAuBd,EAAKmB,GAAK,MAElDa,QAAQC,IAAI,WAAYjB,GACxBI,EAAgBJ,MAEjBoB,OAAM,SAACC,GACNL,QAAQC,IAAII,QAEf,IAGD,yBAAKtC,UAAU,OACb,kBAACuC,EAAA,EAAD,KACE,kBAACnC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNE,QAAS,kBAAMmB,GAAiB,KAHlC,aAOA,kBAACvB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNE,QAAS,kBAAMmB,GAAiB,KAHlC,kBAQF,kBAAC,EAAD,CACEL,MAAOnB,EAAgBY,EAAYG,EACnCf,cAAeA,EACfe,aAAcA,EACdG,gBAAiB,SAACmB,GAAD,OAAWnB,EAAgBmB,IAC5CzB,UAAWA,EACXD,aAAc,SAAC0B,GAAD,OAAW1B,EAAa0B,QCrDxCC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.a8ac6f5d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst TodoItem = (props) => {\r\n  const markComplete = (markedItem) => {\r\n    props.addToCompleted(markedItem);\r\n    props.removeFromNotCompleted(markedItem);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <span className=\"todo-title\">{props.item.title}</span>\r\n      {!props.showCompleted && (\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => markComplete(props.item)}\r\n        >\r\n          Mark Complete\r\n        </Button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = (props) => {\r\n  const addToCompleted = (itemToAdd) => {\r\n    props.setCompleted([...props.completed, itemToAdd]);\r\n  };\r\n\r\n  const removeFromNotCompleted = (itemToRemove) => {\r\n    const notDone = props.notCompleted.filter(\r\n      (item) => item.id !== itemToRemove.id\r\n    );\r\n    props.setNotCompleted(notDone);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.todos.map((item) => (\r\n        <ul key={item.id}>\r\n          <TodoItem\r\n            item={item}\r\n            showCompleted={props.showCompleted}\r\n            removeFromNotCompleted={removeFromNotCompleted}\r\n            addToCompleted={addToCompleted}\r\n          />\r\n        </ul>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import \"./styles.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\";\r\n\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst App = () => {\r\n  const [completed, setCompleted] = useState([]);\r\n  const [notCompleted, setNotCompleted] = useState([]);\r\n  const [showCompleted, setShowCompleted] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos/\")\r\n      .then((response) => {\r\n        console.log(\"Api Todos\", response.data);\r\n        const done = response.data.filter(\r\n          (item) => item.completed === true && item.id < 30\r\n        );\r\n        setCompleted(done);\r\n        console.log(\"done\", done);\r\n        const notDone = response.data.filter(\r\n          (item) => item.completed === false && item.id < 30\r\n        );\r\n        console.log(\"not done\", notDone);\r\n        setNotCompleted(notDone);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setShowCompleted(true)}\r\n        >\r\n          Completed\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => setShowCompleted(false)}\r\n        >\r\n          Not Completed\r\n        </Button>\r\n      </ButtonGroup>\r\n      <TodoList\r\n        todos={showCompleted ? completed : notCompleted}\r\n        showCompleted={showCompleted}\r\n        notCompleted={notCompleted}\r\n        setNotCompleted={(value) => setNotCompleted(value)}\r\n        completed={completed}\r\n        setCompleted={(value) => setCompleted(value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}